logsBucket: 'gs://bucket67ut'

steps:
  # Step 1: Build and push database image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/sukrit-singh-426716/my-repo/image:v1', './tasktfcloudbuild']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/sukrit-singh-426716/my-repo/image:v1']

  #Step2:
  - name: 'hashicorp/terraform:1.0.0'
    args: ['init']
  - name: 'hashicorp/terraform:1.0.0'
    args: ['apply', '-auto-approve']
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/']
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-east1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=my-gke-cluster'

  # Step 3: Create Kubernetes manifests
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p kubernetes-manifests
        
        cat <<EOF > kubernetes-manifests/deployment.yaml
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
         name: web-app
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: web-app
          template:
            metadata:
              labels:
                app: web-app
            spec:
              containers:
                - name: web-app
                  image: us-central1-docker.pkg.dev/sukrit-singh-426716/my-repo/image:v1
                  ports:
                   - containerPort: 80
        ---
        apiVersion: v1
        kind: Service
        metadata:
         name: web-app-service
        spec:
          selector:
            app: web-app
          ports:
            - port: 80
              targetPort: 80
          type: LoadBalancer
    
       
